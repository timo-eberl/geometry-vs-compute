#pragma kernel function_kernel

RWStructuredBuffer<float3> _Positions;
uint _Resolution;
float _Step;
float _Time;

#define PI 3.14159265358979323846

float2 get_uv(uint3 id) {
	return (id.xy + 0.5) * _Step - 1.0;
}

void set_position(uint3 id, float3 position) {
	if (id.x < _Resolution && id.y < _Resolution) {
		_Positions[id.x + id.y * _Resolution] = position;
	}
}

float3 wave (float u, float v, float t) {
	float3 p;
	p.x = u;
	p.y = sin(PI * (u + v + t));
	p.z = v;
	return p;
}

[numthreads(8,8,1)]
void function_kernel(uint3 id: SV_DispatchThreadID) {
	float2 uv = get_uv(id);
	set_position(id, wave(uv.x, uv.y, _Time));
}
